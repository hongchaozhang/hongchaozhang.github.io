<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | Zhang Hongchao]]></title>
  <link href="http://hongchaozhang.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://hongchaozhang.github.io/"/>
  <updated>2015-10-09T10:51:16+08:00</updated>
  <id>http://hongchaozhang.github.io/</id>
  <author>
    <name><![CDATA[Zhang Hongchao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Caution Javascript Closure in Loop]]></title>
    <link href="http://hongchaozhang.github.io/blog/2015/05/09/caution-javascript-closure-in-loop/"/>
    <updated>2015-05-09T00:00:00+08:00</updated>
    <id>http://hongchaozhang.github.io/blog/2015/05/09/caution-javascript-closure-in-loop</id>
    <content type="html"><![CDATA[<h3>Object</h3>

<p>Define a function <span style="background-color:yellow;"><em>addTimer</em></span>, to log executed time for all function-type property of an object</p>

<h3>Definition 1</h3>

<!-- more -->


<h4>Code:</h4>

<p><div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="lineno"> 1</span> <span class="kd">var</span> <span class="nx">addTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 2</span>     <span class="kd">var</span> <span class="nx">prop</span><span class="p">;</span>
<span class="lineno"> 3</span>     <span class="k">for</span> <span class="p">(</span><span class="nx">prop</span> <span class="k">in</span> <span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 4</span>         <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="kd">function</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span> <span class="p">{</span>
<span class="lineno"> 5</span>             <span class="kd">var</span> <span class="nx">backupFunc</span> <span class="o">=</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">];</span>
<span class="lineno"> 6</span>             <span class="c1">// the same problem with the following code</span>
<span class="lineno"> 7</span>             <span class="c1">//backupFunc = (function () {</span>
<span class="lineno"> 8</span>             <span class="c1">//    return widget[prop];</span>
<span class="lineno"> 9</span>             <span class="c1">//})();&lt;/p&gt;</span>
<span class="lineno">10</span> 
<span class="lineno">11</span> <span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>        <span class="c1">// try a deep copy here to make bakcupFunc not changed with prop</span>
<span class="lineno">12</span>         <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
<span class="lineno">13</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="s2">&quot;from timer &quot;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno">14</span>             <span class="nx">backupFunc</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
<span class="lineno">15</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="s2">&quot;from timer &quot;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno">16</span>         <span class="p">};</span>
<span class="lineno">17</span>         <span class="c1">// the same problem with the following code</span>
<span class="lineno">18</span>         <span class="c1">//widget[prop] = (function () {</span>
<span class="lineno">19</span>         <span class="c1">//    return function () {</span>
<span class="lineno">20</span>         <span class="c1">//        console.time(prop);</span>
<span class="lineno">21</span>         <span class="c1">//        backupFunc.apply(this, arguments);</span>
<span class="lineno">22</span>         <span class="c1">//        console.timeEnd(prop);</span>
<span class="lineno">23</span>         <span class="c1">//    };</span>
<span class="lineno">24</span>         <span class="c1">//})();</span>
<span class="lineno">25</span>     <span class="p">}</span>
<span class="lineno">26</span> <span class="p">}</span>
<span class="lineno">27</span> <span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
<span class="lineno">28</span> 
<span class="lineno">29</span> <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span></code></pre></div></p>

<h4>Problem</h4>

<p>All function type property in widget will call the last function type property</p>

<h3>Definition 2</h3>

<p>Since there is no block scope in JavaScript - only <strong>function scope</strong> - by wrapping the function creation in a new function, you ensure that the value of <code>prop</code> remains as you intended.</p>

<h4>Code:</h4>

<p><div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="lineno"> 1</span> <span class="kd">var</span> <span class="nx">addTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 2</span>     <span class="kd">var</span> <span class="nx">prop</span><span class="p">;</span>
<span class="lineno"> 3</span>     <span class="kd">var</span> <span class="nx">getFuncWithTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">prop</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 4</span>         <span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
<span class="lineno"> 5</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">from</span> <span class="nx">timer</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno"> 6</span>             <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
<span class="lineno"> 7</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">from</span> <span class="nx">timer</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno"> 8</span>         <span class="p">};</span>
<span class="lineno"> 9</span>     <span class="p">};</span>
<span class="lineno">10</span>     <span class="k">for</span> <span class="p">(</span><span class="nx">prop</span> <span class="k">in</span> <span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno">11</span>         <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="kd">function</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span> <span class="p">{</span>
<span class="lineno">12</span>             <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">=</span> <span class="nx">getFuncWithTimer</span><span class="p">(</span><span class="nx">prop</span><span class="p">);</span>
<span class="lineno">13</span>         <span class="p">}</span>
<span class="lineno">14</span>     <span class="p">}</span>
<span class="lineno">15</span> <span class="p">};</span></code></pre></div></p>

<h4>Problem</h4>

<p>exceed maximum call stack</p>

<h3>Definition 3</h3>

<h4>Code:</h4>

<p><div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="lineno"> 1</span> <span class="kd">var</span> <span class="nx">addTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 2</span>     <span class="kd">var</span> <span class="nx">prop</span><span class="p">;</span>
<span class="lineno"> 3</span>     <span class="kd">var</span> <span class="nx">getFuncWithTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">prop</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 4</span>         <span class="kd">var</span> <span class="nx">backupFunc</span> <span class="o">=</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">];</span>
<span class="lineno"> 5</span>         <span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
<span class="lineno"> 6</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">from</span> <span class="nx">timer</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno"> 7</span>             <span class="nx">backupFunc</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
<span class="lineno"> 8</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">from</span> <span class="nx">timer</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno"> 9</span>         <span class="p">};</span>
<span class="lineno">10</span>     <span class="p">};</span>
<span class="lineno">11</span>     <span class="k">for</span> <span class="p">(</span><span class="nx">prop</span> <span class="k">in</span> <span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno">12</span>         <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="kd">function</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span> <span class="p">{</span>
<span class="lineno">13</span>             <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">=</span> <span class="nx">getFuncWithTimer</span><span class="p">(</span><span class="nx">prop</span><span class="p">);</span>
<span class="lineno">14</span>         <span class="p">}</span>
<span class="lineno">15</span>     <span class="p">}</span>
<span class="lineno">16</span> <span class="p">};</span></code></pre></div></p>

<h4>Problem</h4>

<p>All function with returned value can not work</p>

<h3>Final Definition</h3>

<h4>Code:</h4>

<p><div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="lineno"> 1</span> <span class="kd">var</span> <span class="nx">addTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 2</span>     <span class="kd">var</span> <span class="nx">prop</span><span class="p">;</span>
<span class="lineno"> 3</span>     <span class="kd">var</span> <span class="nx">getFuncWithTimer</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">prop</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno"> 4</span>         <span class="kd">var</span> <span class="nx">backupFunc</span> <span class="o">=</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">];</span>
<span class="lineno"> 5</span>         <span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
<span class="lineno"> 6</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">from</span> <span class="nx">timer</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno"> 7</span>             <span class="kd">var</span> <span class="nx">ret</span> <span class="o">=</span> <span class="nx">backupFunc</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
<span class="lineno"> 8</span>             <span class="nx">console</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">from</span> <span class="nx">timer</span> <span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nx">prop</span><span class="p">);</span>
<span class="lineno"> 9</span>             <span class="k">return</span> <span class="nx">ret</span><span class="p">;</span>
<span class="lineno">10</span>         <span class="p">};</span>
<span class="lineno">11</span>     <span class="p">};</span>
<span class="lineno">12</span>     <span class="k">for</span> <span class="p">(</span><span class="nx">prop</span> <span class="k">in</span> <span class="nx">widget</span><span class="p">)</span> <span class="p">{</span>
<span class="lineno">13</span>         <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="kd">function</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span> <span class="p">{</span>
<span class="lineno">14</span>             <span class="nx">widget</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">=</span> <span class="nx">getFuncWithTimer</span><span class="p">(</span><span class="nx">prop</span><span class="p">);</span>
<span class="lineno">15</span>         <span class="p">}</span>
<span class="lineno">16</span>     <span class="p">}</span>
<span class="lineno">17</span> <span class="p">};</span></code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Add a Clone Function to Function?]]></title>
    <link href="http://hongchaozhang.github.io/blog/2015/05/09/How-to-Add-a-Clone-function-to-Function/"/>
    <updated>2015-05-09T00:00:00+08:00</updated>
    <id>http://hongchaozhang.github.io/blog/2015/05/09/How-to-Add-a-Clone-function-to-Function</id>
    <content type="html"><![CDATA[<p><div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="lineno">1</span> <span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
<span class="lineno">2</span>     <span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
<span class="lineno">3</span>     <span class="kd">var</span> <span class="nx">temp</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">temporary</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">that</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span> <span class="p">};</span>
<span class="lineno">4</span>     <span class="k">for</span><span class="p">(</span> <span class="nx">key</span> <span class="k">in</span> <span class="k">this</span> <span class="p">)</span> <span class="p">{</span>
<span class="lineno">5</span>         <span class="nx">temp</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="k">this</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
<span class="lineno">6</span>     <span class="p">}</span>
<span class="lineno">7</span>     <span class="k">return</span> <span class="nx">temp</span><span class="p">;</span>
<span class="lineno">8</span> <span class="p">};</span></code></pre></div></p>
]]></content>
  </entry>
  
</feed>
