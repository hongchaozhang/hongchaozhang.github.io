<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: map tech | Reading Space]]></title>
  <link href="http://hongchaozhang.github.io/blog/categories/map-tech/atom.xml" rel="self"/>
  <link href="http://hongchaozhang.github.io/"/>
  <updated>2021-03-01T17:18:01+08:00</updated>
  <id>http://hongchaozhang.github.io/</id>
  <author>
    <name><![CDATA[Zhang Hongchao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[区域位置地理信息的获取、查看、和后期处理]]></title>
    <link href="http://hongchaozhang.github.io/blog/2020/05/29/quyu-bianjie-dili-weizhi-xinxi/"/>
    <updated>2020-05-29T16:53:59+08:00</updated>
    <id>http://hongchaozhang.github.io/blog/2020/05/29/quyu-bianjie-dili-weizhi-xinxi</id>
    <content type="html"><![CDATA[<!-- more -->


<p>如果想展示一些基于地理位置信息的数据，可以考虑使用地图。比如：</p>

<p><img src="/images/%E5%8C%BA%E5%9F%9F%E7%94%B7%E5%A5%B3%E6%AF%94%E4%BE%8B.gif" alt="区域男女比例" /></p>

<blockquote><p>注：上图是MicroStrategy产品效果。</p></blockquote>

<p>这需要在地图上显示指定区域的边界信息，比如中国国家边界信息，或者各省市的边界信息。</p>

<p>为此，首先要获得边界信息数据。下面就介绍一下我在获取中国各省边界信息的过程中用到的一些资源和工具。</p>

<h2>下载</h2>

<p><img src="/images/GADMDownload.jpg" alt="GADMDownload" /></p>

<p><a href="https://gadm.org/download_country_v3.html">GADM</a>可以下载的格式包括KMZ格式和SHP格式。</p>

<ol>
<li>KMZ格式是KML格式的压缩格式，需要用解压工具解压。</li>
<li>下载文件中中国各地区的名称都是英文名称，需要写脚本换成中文信息。</li>
<li>下载的中国各省没有包括台湾，需要手动下载台湾，整合起来。</li>
</ol>


<p>贴个我整合好的连结：<a href="/assets/resources/%E4%B8%AD%E5%9B%BD%E5%90%84%E7%9C%81%E7%94%B7%E5%A5%B3%E6%AF%94%E4%BE%8B%E5%9C%B0%E5%9B%BE%E5%88%86%E6%9E%90.zip">中国各省男女比例地图分析</a>。</p>

<h2>查看</h2>

<p><img src="/images/vscodemappreview.jpg" alt="vscodemappreview" /></p>

<p>在VSCode中使用插件VSCode Map Preview进行预览。但是该插件不支持SHP格式文件预览。</p>

<p><img src="/images/mapshaper.jpg" alt="mapshaper" /></p>

<p><a href="https://mapshaper.org/">mapshaper</a>这个地址支持SHP文件的预览，但是不支持KML格式的预览。</p>

<h2>编辑</h2>

<p>在VSCode中编辑，同时结合VSCode Map Preview插件进行预览。</p>

<p>目前为止，发现的编辑工具都只能基于文本进行编辑，还没有发现一款有UI界面的编辑工具。</p>

<p>另外，如果是KML文件，可以将其当作XML文件进行编辑修改。参考<a href="/blog/2020/06/22/parse-xml-using-python/">使用python编辑xml文件</a></p>

<h2>绘制</h2>

<p><img src="/images/geojsondraw.jpg" alt="geojsondraw" /></p>

<p><a href="http://geojson.io/">geojson.io</a>手动绘制多边形，并且导出geojson格式的文件。</p>

<h2>格式转换</h2>

<p>GDAL ogr2ogr</p>

<ol>
<li>安装GDAL

<ol>
<li>pkg安装</li>
<li>homebrew 安装</li>
</ol>
</li>
<li>添加环境变量<code>export PATH=/Library/Frameworks/GDAL.framework/Programs/:$PATH</code>到<code>～/.bash_profile</code>文件。</li>
<li>运行<code>source ~/.bash_profile</code>或者重启Terminal。</li>
</ol>


<p>现在就可以运行ogr2ogr命令进行格式转化了：</p>

<pre><code>ogr2ogr -f “KML” output.kml input.shp
</code></pre>

<h2>压缩</h2>

<h3>GDAL ogr2ogr压缩点的数量</h3>

<p>除了格式转换，GDAL ogr2ogr还可以进行压缩（ogr2ogr官方网站 <a href="https://gdal.org/programs/ogr2ogr.html%EF%BC%89%EF%BC%9A">https://gdal.org/programs/ogr2ogr.html%EF%BC%89%EF%BC%9A</a></p>

<pre><code>ogr2ogr output.kml input lml 0.0001
</code></pre>

<p>上面命令中最后一个参数对应的是压缩系数，用来控制点的数量，不代表经纬度的小数点位数。</p>

<h3>google官方工具压缩经纬度的经度</h3>

<p>如果要压缩经纬度的精度，即小数点的位数，可以使用<a href="https://www.gearthblog.com/blog/archives/2016/03/making-kml-files-smaller-reducing-precision.html">google官方工具</a>。</p>

<h3>mapshaper压缩点的数量，并实时查看效果。</h3>

<p><img src="/images/mapshapercompressor.gif" alt="mapshapercompressor" /></p>

<p><a href="https://mapshaper.org/">mapshaper</a>进行压缩很是方便。</p>

<p><strong>优点：</strong></p>

<ol>
<li>滑块调整压缩系数，同时查看压缩效果。</li>
<li>可以导出shp格式文件，还有console可以查看shp文件结构。</li>
</ol>


<h2>多边形合并融合</h2>

<p>关键字：merge dissolve</p>

<p>试图寻找中国七大区域（华北、华南、东北等）边界信息，没有找到。理论上可以通过多边形合并得到，但是没有合适的工具。</p>

<p>目前只发现了ArcGIS的desktop可以做这个事情，但是需要收费账号。</p>

<h2>中国各省份的坐标</h2>

<p><a href="https://github.com/baixuexiyang/geocoord">省市坐标</a>上面贴出了中国各省的地理坐标，可能需要用到。</p>

<h2>数据源</h2>

<p>有了各地区的边界信息，我们还需要各地区的一些有意义的数据，比如人口，GDP等，才能在地图上进行查看。这些数据怎么得到呢？</p>

<h3>国家数据网站</h3>

<p><a href="http://data.stats.gov.cn/">国家数据网站</a>提供全国各省很多类型的数据，值得好好挖掘。</p>

<p>其中：</p>

<ol>
<li><a href="http://data.stats.gov.cn/easyquery.htm?cn=C01">年度数据</a>适合查看变化趋势；</li>
<li><a href="http://data.stats.gov.cn/easyquery.htm?cn=E0103">分省年度数据</a>适合观察基于地图的地区分布趋势；</li>
<li><a href="http://www.stats.gov.cn/tjsj/pcsj/">普查数据</a>中的人口普查数据有详细的人口方面的数据。</li>
<li>&hellip;</li>
</ol>


<h3>使用脚本解析excel</h3>

<p>上面的数据有的是网页数据，有的是excel数据（普查数据），对excel内部数据的结构调整可以参考<a href="http://hongchaozhang.github.io/blog/2016/03/04/parsing-and-write-excel-file-using-node-module/">使用node-xlsx进行excel文件的读写</a>进行。如果对Python比较熟悉，可以参考<a href="/blog/2020/06/23/parse-excel-using-python/">使用Python解析Excel文件</a>。</p>

<p>最后贴上所有的资源，包括最后写成的文档：<a href="/assets/resources/%E4%B8%AD%E5%9B%BD%E5%90%84%E7%9C%81%E7%94%B7%E5%A5%B3%E6%AF%94%E4%BE%8B%E5%9C%B0%E5%9B%BE%E5%88%86%E6%9E%90.zip">中国各省男女比例地图分析</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[室内定位技术现状]]></title>
    <link href="http://hongchaozhang.github.io/blog/2017/02/21/indoor-position/"/>
    <updated>2017-02-21T13:37:02+08:00</updated>
    <id>http://hongchaozhang.github.io/blog/2017/02/21/indoor-position</id>
    <content type="html"><![CDATA[<ol>
<li>室内定位各种技术的特点。</li>
<li>室内定位技术的现状：简单介绍苹果、高德、百度、识途等公司的技术。</li>
</ol>


<!-- more -->


<h2>室内定位技术简介</h2>

<p>室内定位的应用场景，参见<a href="https://senion.com/indoor-positioning-for-retail/">室内定位应用场合</a>。</p>

<h3>室内地图</h3>

<p>要进行室内定位，首先需要有室内地图。</p>

<h3>室内定位技术</h3>

<table>
<thead>
<tr>
<th> &mdash; </th>
<th> 工作原理  </th>
<th> 应用场合  </th>
</tr>
</thead>
<tbody>
<tr>
<td> GPS </td>
<td> 接收多个卫星信号计算位置，信号中包含卫星信息和时间戳，根据时间差计算距离。 </td>
<td> 室外定位跟踪，农业和军事应用 </td>
</tr>
<tr>
<td> 基站定位 </td>
<td> 接收多个基站信号，信号中包含基站信息，根据信号强度计算距离。</td>
<td> &mdash; </td>
</tr>
<tr>
<td> Wi-Fi    </td>
<td> 接收多个Wi-Fi信号，根据强度计算距离。   </td>
<td> 室内定位 </td>
</tr>
<tr>
<td> 蓝牙</td>
<td> 接收低功耗蓝牙beacon发射的信号获取beacon信息，通过信号强度计算距离。  </td>
<td> 室内定位 </td>
</tr>
<tr>
<td> RFID</td>
<td> &mdash;  </td>
<td> 存货跟踪，厘米级精度定位要求 </td>
</tr>
<tr>
<td> 地磁</td>
<td> 在地磁指纹采集的基础上，通过磁感应器和网络请求获取位置信息。</td>
<td> &mdash; </td>
</tr>
<tr>
<td> NFC </td>
<td> &mdash;  </td>
<td> 支付／票务</td>
</tr>
<tr>
<td> 陀螺</td>
<td> 在初始状态已知的情况下，通过积分计算未来状态。    </td>
<td> 和其它定位方式结合使用，在保证一定精度的基础上，降低功耗。 </td>
</tr>
</tbody>
</table>


<table>
<thead>
<tr>
<th> &mdash;   </th>
<th> GPS</th>
<th> 基站定位</th>
<th> Wi-Fi</th>
<th> 蓝牙</th>
<th> RFID   </th>
<th> 地磁 </th>
<th> NFC    </th>
<th> 陀螺  </th>
</tr>
</thead>
<tbody>
<tr>
<td> 配置密度   </td>
<td> 全球    </td>
<td> 200米-2000米 </td>
<td> 20米-50米 </td>
<td> 1米-50米 </td>
<td> 1厘米-100米 </td>
<td> 全球 </td>
<td> &mdash;    </td>
<td> 不限  </td>
</tr>
<tr>
<td> 可接入（1-5）   </td>
<td> 4  </td>
<td> 4  </td>
<td> 3    </td>
<td> 4   </td>
<td> 2 </td>
<td> 2    </td>
<td> 3 </td>
<td> 4</td>
</tr>
<tr>
<td> 精度（1-5）</td>
<td> 1(10米) </td>
<td> 0.5(100米)   </td>
<td> 3(3-5米)  </td>
<td> 4(1-3米) </td>
<td> 5(厘米级别) </td>
<td> &mdash;  </td>
<td> 5(厘米级别) </td>
<td> 0.5(10米／100米) </td>
</tr>
<tr>
<td> 隐私安全（1-5） </td>
<td> 3  </td>
<td> 3  </td>
<td> 2    </td>
<td> 3   </td>
<td> 4 </td>
<td> 5    </td>
<td> 4.5    </td>
<td> 5</td>
</tr>
<tr>
<td> 代价（1-5）</td>
<td> 5  </td>
<td> 5  </td>
<td> 3    </td>
<td> 4   </td>
<td> 2 </td>
<td> 1.5  </td>
<td> 3 </td>
<td> 1</td>
</tr>
</tbody>
</table>


<p> 参考：<a href="http://lighthouse.io/indoor-location-technologies-compared/">Indoor location technologies compared</a></p>

<p> <strong>指纹技术</strong></p>

<p> 直接根据Wi-Fi或者蓝牙的信号强度计算距离会有比较大的误差，因为每个接入点的信号强度衰减模型不统一，并且受所在环境（遮挡等）的影响比较大。所以，就实地采集每个位置处每个接入点的信号强度，并存入服务器供后续定位请求使用。</p>

<p> 其它定位原理参考<a href="http://bbs.lbsyun.baidu.com/forum.php?mod=viewthread&amp;tid=116547&amp;extra=page%3D1">室内定位技术原理揭秘</a>。</p>

<h2>各厂商实现的室内定位技术</h2>

<h3>苹果</h3>

<p>苹果在2014年的WWDC上（Taking Core Location Indoors）推出了iBeacon技术和协议，以及对应的SDK，实现室内定位。</p>

<p>关于iBeacon的几个问题。</p>

<ul>
<li><p>我部署的iBeacon节点是否会被别的商家使用？</p>

<p>  回答是Yes！由于iBeacon协议开放，而且易于伪造，你部署的节点完全可以被竞争企业使用。甚至是伪造一个跟你的ID完全相同的Beacon。防止冒用蹭用是一个课题。</p>

<p>  设备商应该会给出一个解决方案，但截止目前还是可以被冒用。由于现在还没大规模部署，还有时间去解决这个问题。</p></li>
<li><p>iBeacon的耗电量如何？</p>

<p>  现在市售方案除Estimote比较特殊外，基本上都是采用的TI2540或2541方案。Beacon作为蓝牙基站发射时间特别短只有4mS左右。</p>

<p>  Beacon的发射周期可调，比如苹果规定100mS发射一次，也就是说100mS里只发射4ms。不同的使用场景可以根据实际需要调整发射周期、发射频率，功耗也会有差别，短的半年，长的3-4年。</p></li>
</ul>


<p><strong>参考</strong></p>

<ul>
<li><a href="http://www.voidcn.com/blog/u012716788/article/p-4590383.html">iBeacon能否精确室内定位等10个技术问题</a></li>
</ul>


<h3>高德</h3>

<p>高德地图支持Wi-Fi和蓝牙iBeacon室内定位。如果是iOS系统，只能用iBeacon定位，因为iOS系统不提供Wi-Fi底层数据接口。</p>

<table>
<thead>
<tr>
<th> 设备 </th>
<th> 精度  </th>
<th> 支持系统   </th>
<th> 部署密度  </th>
<th> 设备单价 </th>
<th> 支持标准  </th>
</tr>
</thead>
<tbody>
<tr>
<td> WIFI </td>
<td> 3~8米 </td>
<td> Android 4.0及以上    </td>
<td> 间隔30米部署，700平米1个 </td>
<td> 上百元   </td>
<td> 标准2.4G/5G频段</td>
</tr>
<tr>
<td> 蓝牙 </td>
<td> 1~5米 </td>
<td> Android 4.3及以上，iOS 8及以上 </td>
<td> 间隔 8米部署，50平1个    </td>
<td> 数十元   </td>
<td> 标准蓝牙4.0广播协议 </td>
</tr>
</tbody>
</table>


<p>应用高德进行室内定位的步骤：</p>

<ol>
<li>准备室内地图（使用高德已有的或者自己制作）。</li>
<li>铺设Wi-Fi或iBeacon接入点。</li>
<li>使用高德提供的定位数据采集工具进行数据采集。</li>
<li>数据采集完毕编译后，上传至服务器。</li>
<li>使用高德提供的定位数据检测工具现场体验定位效果。</li>
<li>开发应用，使用高德室内定位SDK获取位置，包括经纬度和楼层信息。</li>
</ol>


<p>关于室内地图：</p>

<ol>
<li><p>高德已覆盖数据</p>

<p> 高德已有室内地图数据，可免费申请使用。</p></li>
<li><p>高德未覆盖数据</p>

<p> 若为高德未覆盖室内地图数据，提供如下两种数据生产方案：</p>

<ul>
<li>委托与高德合作的第三方生产。</li>
<li>申请自主生产。</li>
</ul>
</li>
</ol>


<p><strong>参考</strong></p>

<ul>
<li><a href="https://lbs.amap.com/getting-started/locate">高德室外定位技术</a></li>
<li><a href="https://lbs.amap.com/getting-started/indoorlocation/">高德室内定位方案</a></li>
<li><a href="https://lbs.amap.com/getting-started/indoorintro">高德室内地图数据</a></li>
</ul>


<h3>百度</h3>

<p>大型商超内寻找店铺、停车场内反向寻车等业务的发展基础都是室内高精度定位。利用三角定位技术、增强WiFi指纹模型技术、地磁技术、蓝牙技术等， 提供精度1-3m的室内高精度定位服务。结合百度室内图服务，更好帮助开发者解决室内定位难题。</p>

<h3>识途</h3>

<p>特色：地磁定位技术。</p>

<p><a href="http://www.ubirouting.com/creator.php">定位和采集工具：识途 Creator</a></p>

<p>仅通过上面的视频很难理解其采集原理，但是，识途提出了采集过程中以下几点注意事项：</p>

<ol>
<li>在按下采集按钮开始采集的时候，请<strong>即刻</strong>开始行走；在到达终点停止行走后，请<strong>即刻</strong>按下采集按钮结束采集。</li>
<li>在采集过程中请保持<strong>统一、稳定、自然</strong>的行走速度, 尽可能保持在道路的中央行走，并且采集过程中尽可能避免晃动手机。</li>
<li>如果在某段路径受到了外界的严重干扰，无法保持一致的行走速度或预定的行走方向，务必针对这段路径进行重新采集。</li>
</ol>


<p>从上面的注意事项，可以大致猜测他是如何做到测量的地磁信号和地理位置的对应。</p>

<p><strong>参考</strong></p>

<ul>
<li><a href="http://www.ubirouting.com/%E8%AF%86%E9%80%94%E5%AE%A4%E5%86%85%E5%AE%9A%E4%BD%8D%E6%8A%80%E6%9C%AF%E7%BB%BC%E8%BF%B0.pdf">识途室内定位技术综述</a></li>
<li><a href="http://ubirouting.com/%E8%AF%86%E9%80%94%E5%AE%A4%E5%86%85%E5%9C%B0%E7%A3%81%E7%8E%AF%E5%A2%83%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%96%B9%E6%B3%95%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.pdf">识途室内地磁环境数据采集方法及注意事项</a></li>
</ul>


<h2>闲谈</h2>

<ul>
<li><p>GPS不是泛指，是特指。</p>

<p>  我们一提到定位，大家印象中最熟悉的技术可能就是GPS定位。其实更为准确的说法是GNSS(Global Navigation Satellite System)定位，中文含义就是全球卫星定位系统。GPS只是GNSS中的一种实现方法，该系统是由美国部署的。另外，还有其他类型的定位系统，例如，俄罗斯的格洛纳斯（GLONASS），欧洲的伽利略和中国的北斗。关系如下：</p>

<ul>
<li>GNSS

<ul>
<li>GPS（美国）</li>
<li>GLONASS（俄罗斯）</li>
<li>北斗（中国）</li>
</ul>
</li>
</ul>
</li>
</ul>


<h2>参考</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[火星坐标导致iOS系统下高德地图定位不准]]></title>
    <link href="http://hongchaozhang.github.io/blog/2016/01/29/convertion-among-every-geo-system/"/>
    <updated>2016-01-29T13:47:42+08:00</updated>
    <id>http://hongchaozhang.github.io/blog/2016/01/29/convertion-among-every-geo-system</id>
    <content type="html"><![CDATA[<p>首先感慨一下：神奇的国度，神奇的坐标！</p>

<h3>火星坐标系统介绍</h3>

<!-- more -->


<p>我们平时用到的地球坐标系统，叫做WGS-84坐标，这个是国际通用的“准确”的坐标系统。国家保密插件，其实就是对真实坐标系统进行人为的加偏处理，即为GCJ-02坐标，戏称“火星坐标”。于是，我们有了下面的东西：</p>

<ul>
<li>地球坐标：指WGS84坐标系统</li>
<li>火星坐标：指使用国家保密插件人为偏移后的坐标</li>
<li>地球地图：指与地球坐标对应的客观真实的地图</li>
<li>火星地图：指经过加密偏移后的，与火星坐标对应的地图</li>
</ul>


<p>而且，国家龟腚： <strong>国内出版的各种地图系统（包括电子形式），必须至少采用GCJ-02对地理位置进行首次加密。</strong>于是，</p>

<ul>
<li>谷歌地图的大陆地图、高德国内地图采用GCJ-02对地图进行加偏。</li>
<li>百度地图更是进一步发挥了天朝特色，除了GCJ-02加偏，自己又在此基础上继续进行加偏，相应的坐标称为BD-09坐标。</li>
</ul>


<p>也就是说，我们平时用到的地图应用都是采用的虚假的坐标，虚假的地图。</p>

<h3>各地图厂商使用的坐标系</h3>

<ul>
<li>火星坐标

<ul>
<li>iOS 地图</li>
<li>Gogole地图</li>
<li>搜搜、阿里云、高德地图</li>
</ul>
</li>
<li>地球坐标

<ul>
<li>Google 卫星地图（国外地图应该都是……）</li>
</ul>
</li>
<li>百度坐标

<ul>
<li>百度地图</li>
</ul>
</li>
</ul>


<h3>各坐标系之间的转换</h3>

<p>为了在地图应用开发中准确地定位，需要将准确的WGS-84坐标转换成需要的坐标。在加偏算法不公开的的情况下，各方大神各显神通，有了下面几种方案：</p>

<h4>数据库</h4>

<p>可以列出WGC-84坐标和GCJ-02坐标系统的对应关系，放在数据库中供检索。数据库方案参考：<a href="http://code4app.com/ios/GPS%E7%81%AB%E6%98%9F%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/51c2564f6803fa9a29000000">GPS火星坐标转换</a>。</p>

<p>也有一些网站提供转换查询服务，比如<a href="http://www.zdoz.net/">ZDOZ.net</a>，和 <a href="http://lbsyun.baidu.com/index.php?title=webapi/guide/changeposition">坐标转换API - Web服务API</a>。</p>

<h4>近似解析式</h4>

<p>逆向求解近似解析式，不需要大的数据库，不需要进行网络请求，而且精度在10米以内，基本能满足日常需求。</p>

<p>这样的实现很多，具体实现可以参考Objective-C的一种实现：<a href="https://github.com/JackZhouCn/JZLocationConverter">JZLocationConverter</a>。</p>

<h3>iOS系统中坐标系的使用</h3>

<p>iOS（9.0）中的关于地图和位置的接口中有些用的是WGS-84坐标，有的使用的是GCJ-02坐标。比如定位用户位置的时候我们使用的两种方法：</p>

<ul>
<li>设置MKMapView中的<code>showsUserLocation = YES</code>，然后在<code>- (void)mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation</code>方法中获得的坐标是GCJ-02坐标。</li>
<li>通过CLLocationManager的<code>startUpdatingLocation</code>方法，并在<code>- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations</code>方法中获得的坐标是WGS-84坐标。</li>
</ul>


<p>其实在使用iOS的地图应用的时候，只要使用的是非大陆的ip地址（国外用户或者国内用户通过国外代理），使用的都将是准确的WGS-84坐标和准确的地图。但是当在大陆地区使用是，苹果使用的是高德的地图服务，得到的坐标也都是GCJ-02坐标。但是有些接口没有本地化，仍然使用WGS-84坐标。</p>

<p>下面具体说一下在下面三个接口中经纬度坐标的使用，下面的内容都是针对iOS中高德地图的使用。</p>

<h4>MKMapView</h4>

<p>通过加到MKMapView中的UIGestureRecognizer的<code>locationInVieww:</code>获得手势在地图上的CGPoint，然后通过MKMapView的<code>convertPoint:toCoordinateFromView:</code>方法得到的经纬度坐标是GCJ-02坐标，使用的也是高德地图，所以在<code>addAnnotation:</code>等操作的时候，不用进行坐标转换。</p>

<h3>CLLocationManager</h3>

<p>即使使用的是高德地图，CLLocationManager返回的坐标也是WGS-84坐标，所以在定位用户位置的时候是有偏差的，需要我们进行坐标转换。</p>

<h3>CLGeoCoder</h3>

<p>在进行经纬度坐标和地址描述转换的时候，我们需要CLGeoCoder中的转换方法：</p>

<ul>
<li><p><code>- (void)geocodeAddressString:(NSString *)addressString completionHandler:(CLGeocodeCompletionHandler)completionHandler</code></p>

<p>  该方法没有问题，输入地址的描述，返回该地址对应的GCJ-02坐标（高德地图）。</p></li>
<li><p><code>- (void)reverseGeocodeLocation:(CLLocation *)location completionHandler:(CLGeocodeCompletionHandler)completionHandler</code></p>

<p>  该方法有问题：当我们直接将得到的GCJ-02坐标传给该接口之后，该接口不能得到正确的地址，而且返回的坐标和输入的坐标有较大的差距，经试验，该返回的坐标是输入坐标经过<code>wgs84ToGcj02:</code>转换之后的坐标，所以，解决方案如下：
  将得到的坐标先经过<code>gcj02ToWgs84</code>转换成WGS-84坐标，传给接口，返回正确的地址，然后将地址坐标通过<code>wgs84ToGcj02</code>转换之后进行使用。</p></li>
</ul>


<h3>其它系统中用的坐标系</h3>

<p>最近在抓取<a href="http://www.hzbus.cn">hzbus.cn</a>网站中的一些数据时发现：该坐标不是我们前面提到的各种坐标。原来该网站使用的是<a href="http://www.mountor.cn/rjcp_377.html">蒙特的GIS引擎</a>。通过试验各种接口，发现其坐标应该是连续<strong>两次</strong>将WGS-84坐标进行<code>wgs84ToGcj02</code>转换得到的，<strong>两次</strong>。所以将其坐标经过<code>gcj02ToWgs84</code>转换成真正的GCJ-02坐标在iOS的高德地图中使用。</p>

<h3>参考</h3>

<ul>
<li>这一篇文章的结论和我的结论一致，（除了GeoCoding外）：<a href="http://blog.it985.com/7728.html">iOS 火星坐标相关整理及解决方案汇总</a></li>
<li><a href="http://blog.csdn.net/giswens/article/details/8775121">火星坐标系统简介</a></li>
<li><a href="http://blog.csdn.net/giswens/article/details/8775267">google map 的地图偏移 火星坐标</a>
*<a href="http://blog.csdn.net/coolypf/article/details/8686588">地球坐标系 (WGS-84) 到火星坐标系 (GCJ-02) 的转换算法</a></li>
<li><a href="http://blog.csdn.net/giswens/article/details/8775183">WGS84坐标转火星坐标（iOS篇）</a></li>
<li>各种坐标体系之间的转换，参考：<a href="http://blog.csdn.net/wildboy2001/article/details/12031351">WGS84、Web墨卡托、火星坐标、百度坐标互转</a></li>
<li><a href="http://blog.csdn.net/swingpyzf/article/details/16972351">IOS LocationManager定位国内偏移，火星坐标(GCJ-02)解决方法</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
